{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Der Name der virtuellen Maschine."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Der Benutzername für den Administrator der VM."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Das Passwort für den Administrator der VM. Dieses sollte sicher übergeben werden (z.B. Key Vault)."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "metadata": {
                "description": "Die Größe (SKU) der virtuellen Maschine, z.B. Standard_B2s, Standard_D2s_v3."
            }
        },
        "os": {
            "type": "string",
            "allowedValues": ["windows11", "windows2022", "windows2025"],
            "metadata": {
                "description": "Das Betriebssystem der VM (windows11, windows2022, windows2025)."
            }
        },
        "publicIpEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Gibt an, ob eine öffentliche IP-Adresse für die VM zugewiesen werden soll."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Die Azure-Region, in der die Ressourcen bereitgestellt werden sollen."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet1",
            "metadata": {
                "description": "Der Name des virtuellen Netzwerks."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "Der Name des Subnetzes im virtuellen Netzwerk."
            }
        },
        "diskType": {
            "type": "string",
            "allowedValues": ["Standard_LRS", "StandardSSD_LRS", "Premium_LRS"],
            "defaultValue": "StandardSSD_LRS",
            "metadata": {
                "description": "Der Speichertyp für den OS-Disk (Standard_LRS, StandardSSD_LRS, Premium_LRS)."
            }
        },
        "networkSecurityGroupEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Gibt an, ob eine Netzwerksicherheitsgruppe (NSG) erstellt und zugewiesen werden soll."
            }
        },
        "nicName": {
            "type": "string",
            "defaultValue": "[concat(parameters('vmName'), '-nic')]",
            "metadata": {
                "description": "Der Name der Netzwerkschnittstelle (NIC)."
            }
        },
        "adJoin": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Gibt an, ob die VM einer Active Directory-Domäne beitreten soll."
            }
        },
        "domainName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Der Name der Domäne, der die VM beitreten soll. Erforderlich, wenn adJoin true ist."
            }
        },
        "domainUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Der Benutzername eines Domänenkontos mit Berechtigungen zum Domänenbeitritt. Erforderlich, wenn adJoin true ist."
            }
        },
        "domainPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Das Passwort des Domänenkontos. Erforderlich, wenn adJoin true ist."
            }
        },
        "ouPath": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Der OU Path in dem sich die viruelle Maschine befinden soll"
            }
        },
        "entraExt": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Gibt an, ob die Azure AD Join (Entra ID) Extension installiert werden soll."
            }
        },
        "avdHostPoolName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Der Name des AVD Host Pools, dem die VM beitreten soll. Erforderlich, wenn avdExt true ist."
            }
        },
        "avdRegistrationToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Das Registrierungstoken für den AVD Host Pool. Erforderlich, wenn avdExt true ist."
            }
        },
        "avdExt": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Gibt an, ob die AVD (Azure Virtual Desktop) Agent Extension installiert werden soll."
            }
        }
    },
    "variables": {
        "virtualNetworkId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnetRef": "[concat(variables('virtualNetworkId'), '/subnets/', parameters('subnetName'))]",
        "publicIpName": "[concat(parameters('vmName'), '-ip')]",
        "publicIpId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]",
        "networkSecurityGroupName": "[concat(parameters('vmName'), '-nsg')]",
        "networkSecurityGroupId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",

        // Image-Referenzen basierend auf dem 'os'-Parameter (nur Windows)
         "imagePublisher": {
        "windows11": "MicrosoftWindowsDesktop",
        "windows2022": "MicrosoftWindowsServer",
        "windows2025": "MicrosoftWindowsServer"
        },
        // Definieren von Mappings für imageOffer
        "imageOffer": {
        "windows11": "windows-11",
        "windows2022": "WindowsServer",
        "windows2025": "WindowsServer"
        },
        // Definieren von Mappings für imageSku
        "imageSku": {
        "windows11": "win11-23h2-pro",
        "windows2022": "2022-datacenter-azure-edition",
        "windows2025": "2025-datacenter-azure-edition"
        }
    },
    "resources": [
        {
            "condition": "[parameters('publicIpEnabled')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2021-02-01",
            "name": "[variables('publicIpName')]",
            "location": "[parameters('location')]",
            "sku": {
                "tier": "Regional",
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2021-02-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowRDP",
                        "properties": {
                            "description": "Allow RDP from Internet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('publicIpEnabled')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-02-01",
            "name": "[parameters('nicName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[if(parameters('networkSecurityGroupEnabled'), variables('networkSecurityGroupId'), json('null'))]"
                }
            },
            "dependsOn": [
                //"[variables('virtualNetworkId')]",
                "[if(parameters('publicIpEnabled'), variables('publicIpId'), json('null'))]",
                "[if(parameters('networkSecurityGroupEnabled'), variables('networkSecurityGroupId'), json('null'))]"
            ]
        },
        {
            "condition": "[not(parameters('publicIpEnabled'))]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-02-01",
            "name": "[parameters('nicName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[if(parameters('networkSecurityGroupEnabled'), variables('networkSecurityGroupId'), json('null'))]"
                }
            },
            "dependsOn": [
                "[if(parameters('networkSecurityGroupEnabled'), variables('networkSecurityGroupId'), json('null'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                    "publisher": "[variables('imagePublisher')[parameters('os')]]",
                    "offer": "[variables('imageOffer')[parameters('os')]]",
                    "sku": "[variables('imageSku')[parameters('os')]]",
                    "version": "latest"
                },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('diskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            ]
        },
        {
            "condition": "[parameters('adJoin')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-07-01",
            "name": "[concat(parameters('vmName'), '/DomainJoin')]",
            "location": "[parameters('location')]",
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainName')]",
                    "OUPath": "[parameters('ouPath')]", 
                    "User": "[format('{0}\\{1}', parameters('domainName'), parameters('domainUsername'))]",
                    "Restart": true,
                    "Options": "3"
                },
                "protectedSettings": {
                    "Password": "[parameters('domainPassword')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            ]
        },
        {
            "condition": "[parameters('entraExt')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat(parameters('vmName'), '/AADLoginForWindows')]",
            "location": "[parameters('location')]",
            "properties": {
                "publisher": "Microsoft.Azure.ActiveDirectory",
                "type": "AADLoginForWindows",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"

            ]
        },
        {
            "condition": "[parameters('avdExt')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat(parameters('vmName'), '/AddSessionHost')]",
            "location": "[parameters('location')]",
             "properties": {
              "publisher": "Microsoft.Powershell",
              "type": "DSC",
              "typeHandlerVersion": "2.73",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "modulesUrl": "https://raw.githubusercontent.com/Azure/RDS-Templates/master/ARM-wvd-templates/DSC/Configuration.zip",
                "configurationFunction": "Configuration.ps1\\AddSessionHost",
                    "properties": {
                    "hostPoolName": "[parameters('avdHostPoolName')]",
                    "registrationInfoToken": "[parameters('avdRegistrationToken')]",
                    "aadJoin": false,
					"UseAgentDownloadEndpoint": true,
                    "sessionHostConfigurationLastUpdateTime": ""
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            ]
        }
    ],
    "outputs": {
        "vmId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
        },
        "publicIpAddress": {
            "condition": "[parameters('publicIpEnabled')]",
            "type": "string",
            "value": "[if(parameters('publicIpEnabled'), reference(variables('publicIpId')).ipAddress, 'No Public IP')]"
        }
    }
}